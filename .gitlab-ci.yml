stages:
  - build
  - validate
  - commit

variables:
  IMAGE_NAME: "test-app"
  IMAGE_TAG: "v2"
  LBL_IMAGE_TIER: "1"
  HARBOR_URL: "harbor.local"
  HARBOR_PORT: "80"
  HARBOR_PROJECT: "library"
  # HARBOR_USER: "me" # deployed via GitLab CI/CD secret
  # HARBOR_PASSWORD: "your_password" # deployed via GitLab CI/CD secret
  TEST_WAIT_TIME: "3" # seconds to wait for container logs

build_image:
  stage: build
  script:
    - echo "Building Docker image with docker..."
    - docker build --build-arg GITLAB_REPO_URL=$CI_PROJECT_URL --build-arg LBL_IMAGE_TIER=$LBL_IMAGE_TIER -t ${IMAGE_NAME}:${IMAGE_TAG} .
    - echo "Saving Docker image as artifact..."
    - docker save ${IMAGE_NAME}:${IMAGE_TAG} -o ${IMAGE_NAME}_${IMAGE_TAG}.tar
    - echo "Image built and saved successfully!"
    - docker images | grep ${IMAGE_NAME}
  artifacts:
    paths:
      - ${IMAGE_NAME}_${IMAGE_TAG}.tar
    expire_in: 1 day
  only:
    - main
    - merge_requests
  tags:
    - docker
    - x86_64

test_image:
  stage: validate
  script:
    - echo "Testing the built image..."
    - |
      CONTAINER_ID=$(docker run -d ${IMAGE_NAME}:${IMAGE_TAG})
      echo "Container started with ID: $CONTAINER_ID"
      echo "Waiting ${TEST_WAIT_TIME} seconds to capture logs..."
      sleep ${TEST_WAIT_TIME}      
      echo "Container logs:"
      docker logs $CONTAINER_ID
      echo "Stopping and removing container..."
      docker stop $CONTAINER_ID
      docker rm $CONTAINER_ID
      echo "Container test completed!"
  dependencies:
    - build_image
  only:
    - main
    - merge_requests
  tags:
    - docker

scan_image:
  stage: validate
  dependencies:
    - build_image
  script:
    - docker load -i ${IMAGE_NAME}_${IMAGE_TAG}.tar
    - trivy image --exit-code 1 --severity HIGH,CRITICAL ${IMAGE_NAME}:${IMAGE_TAG}
  allow_failure: true

push_image:
  stage: commit
  dependencies:
    - build_image
    - test_image
    - scan_image
  script:
    - echo "Logging in to local Harbor Docker registry..."
    - docker login ${HARBOR_URL}:${HARBOR_PORT} -u $HARBOR_USER -p $HARBOR_PASSWORD
    - echo "Tagging image for Harbor..."
    - docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${HARBOR_URL}:${HARBOR_PORT}/${HARBOR_PROJECT}/${IMAGE_NAME}:${IMAGE_TAG}
    - echo "Pushing image to Harbor..."
    - docker push ${HARBOR_URL}:${HARBOR_PORT}/${HARBOR_PROJECT}/${IMAGE_NAME}:${IMAGE_TAG}
    - echo "Image pushed successfully!"
  only:
    - main
    - merge_requests
  tags:
    - docker
    - x86_64

  # cleanup_artifacts:
  #   stage: cleanup
  #   script:
  #     - echo "Cleaning up image artifact..."
  #     - rm -f ${IMAGE_NAME}_${IMAGE_TAG}.tar
  #     - echo "Cleanup completed!"
  #   dependencies:
  #     - build_image
  #   when: always
  #   only:
  #     - main
  #     - merge_requests
  #   tags:
  #     - docker